name: ci

on:
  push:
    branches:
      - sdk

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      matrix-unique-images: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
    steps:
      # Grab upstream actions and store them in temp dir
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - id: save-actions
        run: |
          rm -rf /tmp/upstream-actions
          mkdir /tmp/upstream-actions
          cp -r ./.github /tmp/upstream-actions

      # Checkout, build, and test
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # v3.0.0
        with:
          go-version: 1.19
          check-latest: true
      - uses: chainguard-dev/actions/goimports@main
      - run: make wolfictl
      - run: make test

      # Skaffold an SDK image
      - id: sdk-init
        name: Initialize a fresh SDK layout
        run: |
          rm -rf images/
          ./wolfictl sdk init images/sdk
      
      # Generate build matrix from images/ dir (just SDK for now)
      - id: generate-matrix-setup
        run: |
          rm -rf .github/actions
          mkdir .github/actions
          mv /tmp/upstream-actions/.github/actions .github/actions
      - id: generate-matrix
        uses: ./.github/actions/generate-matrix
        with:
          repository: chainguard-images/images

  release:
    name: release
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build.outputs.matrix) }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          repository: chainguard-images/images
      - run: |
          echo '${{ toJSON(matrix) }}' > inputs.json
          cat inputs.json | jq
